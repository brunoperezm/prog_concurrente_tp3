title Main

actor Main
participant ConsumePendingFlag
participant TaskManager
participant CpuStateManager
participant TaskDispatcher
participant Monitor
activate Monitor


Main->ConsumePendingFlag: start
activate ConsumePendingFlag

Main->TaskManager: start
activate TaskManager

Main->CpuStateManager: start
activate CpuStateManager

Main->TaskDispatcher: start
activate TaskDispatcher


par consumePendingFlag
ConsumePendingFlag-->ConsumePendingFlag: run


alt cpu = 1
ConsumePendingFlag->ConsumePendingFlag:consumePendingTask = CONSUME_PENDING_TASK_TOKEN_1
else 
ConsumePendingFlag->ConsumePendingFlag:consumePendingTask = CONSUME_PENDING_TASK_TOKEN_2
end
loop !interrupted()
ConsumePendingFlag->Monitor: fireTransition(consumePendingTask)

end 

thread taskManager
TaskManager-->TaskManager:run

alt cpu = 1
TaskManager->TaskManager:startService = START_SERVICE_1
TaskManager->TaskManager:endService = END_SERVICE_RATE_1
else 
TaskManager->TaskManager:startService = START_SERVICE_2
TaskManager->TaskManager:endService = END_SERVICE_RATE_2
end

loop !interrupted()
TaskManager->Monitor:fireTransition(startService)
TaskManager->Monitor:fireTransition(endService
end

thread cpuStateManager
CpuStateManager-->CpuStateManager:run

alt cpu = 1
CpuStateManager->CpuStateManager:WakeUp = WAKE_UP_1


CpuStateManager->CpuStateManager:PowerUpDelay = POWER_UP_DELAY_1

CpuStateManager->CpuStateManager: PowerDownThreshold = POWER_1
else 
CpuStateManager->CpuStateManager:WakeUp = WAKE_UP_2


CpuStateManager->CpuStateManager:PowerUpDelay = POWER_UP_DELAY_2

CpuStateManager->CpuStateManager: PowerDownThreshold = POWER_2
end

loop !interrupted()
CpuStateManager->Monitor:fireTransition(wakeUp)

CpuStateManager->Monitor:fireTransition(powerUpDelay)
CpuStateManager->Monitor:fireTransition(powerDownThreshold)
end

thread taskDispatcher
TaskDispatcher-->TaskDispatcher: run()
loop !interrupted() o se despacharon todas
TaskDispatcher->Monitor: taskDispatch()
TaskDispatcher<--Monitor: pair<bool,CPU>
alt pair.right == CPU1
TaskDispatcher->TaskDispatcher:cpu1Tasks\+\+
else
TaskDispatcher->TaskDispatcher:cpu2Tasks\+\+
end

end
end // par